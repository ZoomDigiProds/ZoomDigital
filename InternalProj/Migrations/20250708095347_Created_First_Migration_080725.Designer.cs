// <auto-generated />
using System;
using InternalProj.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InternalProj.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250708095347_Created_First_Migration_080725")]
    partial class Created_First_Migration_080725
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InternalProj.Models.AlbumSizeDetails", b =>
                {
                    b.Property<int>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SizeId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("SizeId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("InternalProj.Models.AuditLog", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AuditId"));

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("ChangesMade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LogoutTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StaffId")
                        .HasColumnType("integer");

                    b.HasKey("AuditId");

                    b.HasIndex("StaffId");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("InternalProj.Models.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BranchId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("BranchId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("InternalProj.Models.ChildSubHead", b =>
                {
                    b.Property<int>("ChildSubHeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ChildSubHeadId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("ChildSubHeadName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SubHeadId")
                        .HasColumnType("integer");

                    b.HasKey("ChildSubHeadId");

                    b.HasIndex("SubHeadId");

                    b.ToTable("ChildSubHeads");
                });

            modelBuilder.Entity("InternalProj.Models.CustomerAddress", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AddressId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Address2")
                        .HasColumnType("text");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<int>("RegionId")
                        .HasColumnType("integer");

                    b.Property<int>("StateId")
                        .HasColumnType("integer");

                    b.HasKey("AddressId");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.HasIndex("RegionId");

                    b.HasIndex("StateId");

                    b.ToTable("CustomerAddresses");
                });

            modelBuilder.Entity("InternalProj.Models.CustomerCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CategoryId");

                    b.ToTable("CustomerCategories");
                });

            modelBuilder.Entity("InternalProj.Models.CustomerContact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ContactId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PhoneTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Whatsapp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ContactId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PhoneTypeId");

                    b.ToTable("CustomerContacts");
                });

            modelBuilder.Entity("InternalProj.Models.CustomerReg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasDefaultValue("Y");

                    b.Property<int>("BranchId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CustomerCategoryCategoryId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Discount")
                        .HasColumnType("numeric");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("RateTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("StaffId")
                        .HasColumnType("integer");

                    b.Property<string>("StudioName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CustomerCategoryCategoryId");

                    b.HasIndex("RateTypeId");

                    b.HasIndex("StaffId");

                    b.ToTable("CustomerRegs");
                });

            modelBuilder.Entity("InternalProj.Models.DeliveryMaster", b =>
                {
                    b.Property<int>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DeliveryId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("DeliveryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("DeliveryId");

                    b.ToTable("DeliveryMasters");
                });

            modelBuilder.Entity("InternalProj.Models.DeliveryMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryModes");
                });

            modelBuilder.Entity("InternalProj.Models.DeptMaster", b =>
                {
                    b.Property<int>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DeptId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("DeptId");

                    b.ToTable("DeptMasters");
                });

            modelBuilder.Entity("InternalProj.Models.DesignationMaster", b =>
                {
                    b.Property<int>("DesignationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DesignationId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("DesignationId");

                    b.ToTable("DesignationMasters");
                });

            modelBuilder.Entity("InternalProj.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InvoiceId"));

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("Cess")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Commission")
                        .HasColumnType("numeric");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("numeric");

                    b.Property<int>("ModeId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("NetAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("numeric");

                    b.Property<int>("WorkOrderId")
                        .HasColumnType("integer");

                    b.HasKey("InvoiceId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ModeId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("InternalProj.Models.Machine", b =>
                {
                    b.Property<int>("MachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MachineId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("MachineId");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("InternalProj.Models.MainHeadReg", b =>
                {
                    b.Property<int>("MainHeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MainHeadId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("MainHeadName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("MainHeadId");

                    b.ToTable("MainHeads");
                });

            modelBuilder.Entity("InternalProj.Models.ModeOfPayment", b =>
                {
                    b.Property<int>("ModeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ModeId"));

                    b.Property<string>("ModeType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ModeId");

                    b.ToTable("ModeOfPayments");
                });

            modelBuilder.Entity("InternalProj.Models.OrderVia", b =>
                {
                    b.Property<int>("OrderViaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrderViaId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("OrderViaCategory")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("OrderViaId");

                    b.ToTable("OrderVias");
                });

            modelBuilder.Entity("InternalProj.Models.OutstandingAmount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalOutstanding")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("OutstandingAmounts");
                });

            modelBuilder.Entity("InternalProj.Models.PasswordResetToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StaffId")
                        .HasColumnType("integer");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("PasswordResetTokens");
                });

            modelBuilder.Entity("InternalProj.Models.PhoneType", b =>
                {
                    b.Property<int>("PhoneTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PhoneTypeId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("PhoneTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("PhoneTypeId");

                    b.ToTable("PhoneTypes");
                });

            modelBuilder.Entity("InternalProj.Models.RateMaster", b =>
                {
                    b.Property<int>("RateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RateId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Details")
                        .HasColumnType("text");

                    b.Property<int>("MainHeadId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<int>("SizeId")
                        .HasColumnType("integer");

                    b.Property<int>("SubHeadId")
                        .HasColumnType("integer");

                    b.HasKey("RateId");

                    b.HasIndex("MainHeadId");

                    b.HasIndex("SizeId");

                    b.HasIndex("SubHeadId");

                    b.ToTable("RateMasters");
                });

            modelBuilder.Entity("InternalProj.Models.RateTypeMaster", b =>
                {
                    b.Property<int>("RateTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RateTypeId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("RateTypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RateTypeId");

                    b.ToTable("RateTypeMasters");
                });

            modelBuilder.Entity("InternalProj.Models.RegionMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("RegionMasters");
                });

            modelBuilder.Entity("InternalProj.Models.StaffAddress", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AddressId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Address2")
                        .HasColumnType("text");

                    b.Property<int>("StaffId")
                        .HasColumnType("integer");

                    b.HasKey("AddressId");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffAddresses");
                });

            modelBuilder.Entity("InternalProj.Models.StaffContact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ContactId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Phone1")
                        .HasColumnType("text");

                    b.Property<string>("Phone2")
                        .HasColumnType("text");

                    b.Property<int>("PhoneTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("StaffId")
                        .HasColumnType("integer");

                    b.Property<string>("Whatsapp")
                        .HasColumnType("text");

                    b.HasKey("ContactId");

                    b.HasIndex("PhoneTypeId");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffContacts");
                });

            modelBuilder.Entity("InternalProj.Models.StaffCredentials", b =>
                {
                    b.Property<int>("CredentialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CredentialId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StaffId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CredentialId");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffCredentials");
                });

            modelBuilder.Entity("InternalProj.Models.StaffDepartment", b =>
                {
                    b.Property<int>("StaffId")
                        .HasColumnType("integer");

                    b.Property<int>("DeptId")
                        .HasColumnType("integer");

                    b.HasKey("StaffId", "DeptId");

                    b.HasIndex("DeptId");

                    b.ToTable("StaffDepartments");
                });

            modelBuilder.Entity("InternalProj.Models.StaffDesignation", b =>
                {
                    b.Property<int>("StaffId")
                        .HasColumnType("integer");

                    b.Property<int>("DesignationId")
                        .HasColumnType("integer");

                    b.HasKey("StaffId", "DesignationId");

                    b.HasIndex("DesignationId");

                    b.ToTable("StaffDesignations");
                });

            modelBuilder.Entity("InternalProj.Models.StaffReg", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StaffId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasDefaultValue("Y");

                    b.Property<int>("BranchId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("DOB")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("DOJ")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DeptMasterDeptId")
                        .HasColumnType("integer");

                    b.Property<int?>("DesignationMasterDesignationId")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.HasKey("StaffId");

                    b.HasIndex("BranchId");

                    b.HasIndex("DeptMasterDeptId");

                    b.HasIndex("DesignationMasterDesignationId");

                    b.HasIndex("StaffId")
                        .IsUnique();

                    b.ToTable("StaffRegs");
                });

            modelBuilder.Entity("InternalProj.Models.StateMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasDefaultValue("Y");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StateMasters");
                });

            modelBuilder.Entity("InternalProj.Models.SubHeadDetails", b =>
                {
                    b.Property<int>("SubHeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SubHeadId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<int?>("AlbumSizeDetailsSizeId")
                        .HasColumnType("integer");

                    b.Property<string>("Details")
                        .HasColumnType("text");

                    b.Property<int>("MachineId")
                        .HasColumnType("integer");

                    b.Property<int>("MainHeadId")
                        .HasColumnType("integer");

                    b.Property<int?>("MainHeadRegMainHeadId")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("SubHeadName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("SubHeadId");

                    b.HasIndex("AlbumSizeDetailsSizeId");

                    b.HasIndex("MachineId");

                    b.HasIndex("MainHeadId");

                    b.HasIndex("MainHeadRegMainHeadId");

                    b.ToTable("SubHeads");
                });

            modelBuilder.Entity("InternalProj.Models.TaxMaster", b =>
                {
                    b.Property<int>("TaxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TaxId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("TaxName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<decimal>("TaxPer")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("WefDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("TaxId");

                    b.ToTable("TaxMasters");
                });

            modelBuilder.Entity("InternalProj.Models.WorkDetails", b =>
                {
                    b.Property<int>("WorkDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WorkDetailsId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<double?>("Cess")
                        .HasColumnType("double precision");

                    b.Property<int?>("ChildSubheadId")
                        .HasColumnType("integer");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("GTotal")
                        .HasColumnType("double precision");

                    b.Property<int>("MainHeadId")
                        .HasColumnType("integer");

                    b.Property<int>("Qty")
                        .HasColumnType("integer");

                    b.Property<double>("Rate")
                        .HasColumnType("double precision");

                    b.Property<int>("SizeId")
                        .HasColumnType("integer");

                    b.Property<int>("SubheadId")
                        .HasColumnType("integer");

                    b.Property<double?>("Tax")
                        .HasColumnType("double precision");

                    b.Property<int>("WorkOrderId")
                        .HasColumnType("integer");

                    b.HasKey("WorkDetailsId");

                    b.HasIndex("ChildSubheadId");

                    b.HasIndex("MainHeadId");

                    b.HasIndex("SizeId");

                    b.HasIndex("SubheadId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("WorkDetails");
                });

            modelBuilder.Entity("InternalProj.Models.WorkOrderMaster", b =>
                {
                    b.Property<int>("WorkOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WorkOrderId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("character(1)")
                        .HasDefaultValue("Y")
                        .IsFixedLength()
                        .HasAnnotation("RegularExpression", "Y|N");

                    b.Property<double?>("Advance")
                        .HasColumnType("double precision");

                    b.Property<int?>("AlbumSizeId")
                        .HasColumnType("integer");

                    b.Property<double?>("Balance")
                        .HasColumnType("double precision");

                    b.Property<int?>("BranchId")
                        .HasColumnType("integer");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<int?>("CustomerRegId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Ddate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DeliveryModeId")
                        .HasColumnType("integer");

                    b.Property<int?>("DeliveryTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("MachineId")
                        .HasColumnType("integer");

                    b.Property<string>("Mobile")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("NoOfCopies")
                        .HasColumnType("integer");

                    b.Property<int?>("NoOfSheets")
                        .HasColumnType("integer");

                    b.Property<int?>("OrderViaId")
                        .HasColumnType("integer");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<int?>("StaffId")
                        .HasColumnType("integer");

                    b.Property<double>("SubTotal")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("Wdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("WorkOrderNo")
                        .HasColumnType("text");

                    b.Property<int?>("WorkTypeId")
                        .HasColumnType("integer");

                    b.HasKey("WorkOrderId");

                    b.HasIndex("AlbumSizeId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("CustomerRegId");

                    b.HasIndex("DeliveryModeId");

                    b.HasIndex("DeliveryTypeId");

                    b.HasIndex("MachineId");

                    b.HasIndex("OrderViaId");

                    b.HasIndex("StaffId");

                    b.HasIndex("WorkTypeId");

                    b.ToTable("WorkOrders");
                });

            modelBuilder.Entity("InternalProj.Models.WorkType", b =>
                {
                    b.Property<int>("WorkTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WorkTypeId"));

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("WorkTypeId");

                    b.ToTable("WorkTypes");
                });

            modelBuilder.Entity("InternalProj.Models.AuditLog", b =>
                {
                    b.HasOne("InternalProj.Models.StaffReg", "Staff")
                        .WithMany("AuditLogs")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("InternalProj.Models.ChildSubHead", b =>
                {
                    b.HasOne("InternalProj.Models.SubHeadDetails", "SubHead")
                        .WithMany("ChildSubHeads")
                        .HasForeignKey("SubHeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubHead");
                });

            modelBuilder.Entity("InternalProj.Models.CustomerAddress", b =>
                {
                    b.HasOne("InternalProj.Models.CustomerReg", "Customer")
                        .WithOne("Address")
                        .HasForeignKey("InternalProj.Models.CustomerAddress", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalProj.Models.RegionMaster", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalProj.Models.StateMaster", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Region");

                    b.Navigation("State");
                });

            modelBuilder.Entity("InternalProj.Models.CustomerContact", b =>
                {
                    b.HasOne("InternalProj.Models.CustomerReg", "Customer")
                        .WithMany("Contacts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalProj.Models.PhoneType", "PhoneType")
                        .WithMany()
                        .HasForeignKey("PhoneTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("PhoneType");
                });

            modelBuilder.Entity("InternalProj.Models.CustomerReg", b =>
                {
                    b.HasOne("InternalProj.Models.Branch", "Branch")
                        .WithMany("CustomerRegs")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InternalProj.Models.CustomerCategory", "CustomerCategory")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InternalProj.Models.CustomerCategory", null)
                        .WithMany("Customers")
                        .HasForeignKey("CustomerCategoryCategoryId");

                    b.HasOne("InternalProj.Models.RateTypeMaster", "RateTypeMaster")
                        .WithMany("CustomerRegs")
                        .HasForeignKey("RateTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InternalProj.Models.StaffReg", "StaffReg")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("CustomerCategory");

                    b.Navigation("RateTypeMaster");

                    b.Navigation("StaffReg");
                });

            modelBuilder.Entity("InternalProj.Models.Invoice", b =>
                {
                    b.HasOne("InternalProj.Models.CustomerReg", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalProj.Models.ModeOfPayment", "ModeOfPayment")
                        .WithMany()
                        .HasForeignKey("ModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalProj.Models.WorkOrderMaster", "WorkOrder")
                        .WithMany()
                        .HasForeignKey("WorkOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("ModeOfPayment");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("InternalProj.Models.OutstandingAmount", b =>
                {
                    b.HasOne("InternalProj.Models.CustomerReg", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("InternalProj.Models.PasswordResetToken", b =>
                {
                    b.HasOne("InternalProj.Models.StaffReg", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("InternalProj.Models.RateMaster", b =>
                {
                    b.HasOne("InternalProj.Models.MainHeadReg", "MainHead")
                        .WithMany()
                        .HasForeignKey("MainHeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalProj.Models.AlbumSizeDetails", "AlbumSize")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalProj.Models.SubHeadDetails", "SubHead")
                        .WithMany()
                        .HasForeignKey("SubHeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlbumSize");

                    b.Navigation("MainHead");

                    b.Navigation("SubHead");
                });

            modelBuilder.Entity("InternalProj.Models.RegionMaster", b =>
                {
                    b.HasOne("InternalProj.Models.StateMaster", "State")
                        .WithMany("Regions")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("InternalProj.Models.StaffAddress", b =>
                {
                    b.HasOne("InternalProj.Models.StaffReg", "Staff")
                        .WithMany("Addresses")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("InternalProj.Models.StaffContact", b =>
                {
                    b.HasOne("InternalProj.Models.PhoneType", "PhoneType")
                        .WithMany()
                        .HasForeignKey("PhoneTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InternalProj.Models.StaffReg", "Staff")
                        .WithMany("Contacts")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhoneType");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("InternalProj.Models.StaffCredentials", b =>
                {
                    b.HasOne("InternalProj.Models.StaffReg", "Staff")
                        .WithMany("Credentials")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("InternalProj.Models.StaffDepartment", b =>
                {
                    b.HasOne("InternalProj.Models.DeptMaster", "Department")
                        .WithMany()
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalProj.Models.StaffReg", "Staff")
                        .WithMany("StaffDepartments")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("InternalProj.Models.StaffDesignation", b =>
                {
                    b.HasOne("InternalProj.Models.DesignationMaster", "Designation")
                        .WithMany()
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalProj.Models.StaffReg", "Staff")
                        .WithMany("StaffDesignations")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Designation");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("InternalProj.Models.StaffReg", b =>
                {
                    b.HasOne("InternalProj.Models.Branch", "Branch")
                        .WithMany("StaffRegs")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InternalProj.Models.DeptMaster", null)
                        .WithMany("Staffs")
                        .HasForeignKey("DeptMasterDeptId");

                    b.HasOne("InternalProj.Models.DesignationMaster", null)
                        .WithMany("Staffs")
                        .HasForeignKey("DesignationMasterDesignationId");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("InternalProj.Models.SubHeadDetails", b =>
                {
                    b.HasOne("InternalProj.Models.AlbumSizeDetails", null)
                        .WithMany("SubHeads")
                        .HasForeignKey("AlbumSizeDetailsSizeId");

                    b.HasOne("InternalProj.Models.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InternalProj.Models.MainHeadReg", "MainHead")
                        .WithMany()
                        .HasForeignKey("MainHeadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InternalProj.Models.MainHeadReg", null)
                        .WithMany("SubHeads")
                        .HasForeignKey("MainHeadRegMainHeadId");

                    b.Navigation("Machine");

                    b.Navigation("MainHead");
                });

            modelBuilder.Entity("InternalProj.Models.WorkDetails", b =>
                {
                    b.HasOne("InternalProj.Models.ChildSubHead", "ChildSubHead")
                        .WithMany()
                        .HasForeignKey("ChildSubheadId");

                    b.HasOne("InternalProj.Models.MainHeadReg", "MainHead")
                        .WithMany()
                        .HasForeignKey("MainHeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalProj.Models.AlbumSizeDetails", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalProj.Models.SubHeadDetails", "SubHead")
                        .WithMany()
                        .HasForeignKey("SubheadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternalProj.Models.WorkOrderMaster", "WorkOrder")
                        .WithMany("WorkDetails")
                        .HasForeignKey("WorkOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChildSubHead");

                    b.Navigation("MainHead");

                    b.Navigation("Size");

                    b.Navigation("SubHead");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("InternalProj.Models.WorkOrderMaster", b =>
                {
                    b.HasOne("InternalProj.Models.AlbumSizeDetails", "AlbumSize")
                        .WithMany()
                        .HasForeignKey("AlbumSizeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InternalProj.Models.Branch", "Branch")
                        .WithMany("WorkOrders")
                        .HasForeignKey("BranchId");

                    b.HasOne("InternalProj.Models.CustomerReg", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InternalProj.Models.CustomerReg", null)
                        .WithMany("WorkOrders")
                        .HasForeignKey("CustomerRegId");

                    b.HasOne("InternalProj.Models.DeliveryMode", "DeliveryMode")
                        .WithMany()
                        .HasForeignKey("DeliveryModeId");

                    b.HasOne("InternalProj.Models.DeliveryMaster", "DeliveryType")
                        .WithMany()
                        .HasForeignKey("DeliveryTypeId");

                    b.HasOne("InternalProj.Models.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("InternalProj.Models.OrderVia", "OrderVia")
                        .WithMany()
                        .HasForeignKey("OrderViaId");

                    b.HasOne("InternalProj.Models.StaffReg", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InternalProj.Models.WorkType", "WorkType")
                        .WithMany()
                        .HasForeignKey("WorkTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AlbumSize");

                    b.Navigation("Branch");

                    b.Navigation("Customer");

                    b.Navigation("DeliveryMode");

                    b.Navigation("DeliveryType");

                    b.Navigation("Machine");

                    b.Navigation("OrderVia");

                    b.Navigation("Staff");

                    b.Navigation("WorkType");
                });

            modelBuilder.Entity("InternalProj.Models.AlbumSizeDetails", b =>
                {
                    b.Navigation("SubHeads");
                });

            modelBuilder.Entity("InternalProj.Models.Branch", b =>
                {
                    b.Navigation("CustomerRegs");

                    b.Navigation("StaffRegs");

                    b.Navigation("WorkOrders");
                });

            modelBuilder.Entity("InternalProj.Models.CustomerCategory", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("InternalProj.Models.CustomerReg", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Contacts");

                    b.Navigation("WorkOrders");
                });

            modelBuilder.Entity("InternalProj.Models.DeptMaster", b =>
                {
                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("InternalProj.Models.DesignationMaster", b =>
                {
                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("InternalProj.Models.MainHeadReg", b =>
                {
                    b.Navigation("SubHeads");
                });

            modelBuilder.Entity("InternalProj.Models.RateTypeMaster", b =>
                {
                    b.Navigation("CustomerRegs");
                });

            modelBuilder.Entity("InternalProj.Models.StaffReg", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("AuditLogs");

                    b.Navigation("Contacts");

                    b.Navigation("Credentials");

                    b.Navigation("StaffDepartments");

                    b.Navigation("StaffDesignations");
                });

            modelBuilder.Entity("InternalProj.Models.StateMaster", b =>
                {
                    b.Navigation("Regions");
                });

            modelBuilder.Entity("InternalProj.Models.SubHeadDetails", b =>
                {
                    b.Navigation("ChildSubHeads");
                });

            modelBuilder.Entity("InternalProj.Models.WorkOrderMaster", b =>
                {
                    b.Navigation("WorkDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
