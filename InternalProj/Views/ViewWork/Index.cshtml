@* @model InternalProj.ViewModel.WorkOrderViewModel

@{
    ViewBag.Title = "View Work Orders";
    var slno = (Model.CurrentPage - 1) * 10 + 1;
    var counter = slno;
}

<div class="common-pages-layout">
    <div class="common-inner-container">
        <h3 class="page-heading">View Work Order</h3>

        <form asp-action="Search" method="post" class="grid grid-cols-1 md:grid-cols-5 gap-4 mb-8 items-end">
            <div>
                <label for="studio" class="block text-gray-700 text-sm font-medium mb-1">Studio</label>
                <select id="studio" name="studio"
                        class="block w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500">
                    <option value="">-- Select Studio --</option>
                    @foreach (var studio in Model.StudioList)
                    {
                        var isSelected = studio == Model.StudioFilter ? "selected" : "";
                        @Html.Raw($"<option value=\"{studio}\" {isSelected}>{studio}</option>")
                    }
                </select>
            </div>
            <div>
                <label for="fromDate" class="block text-gray-700 text-sm font-medium mb-1">From Date</label>
                <input type="date" id="fromDate" name="fromDate"
                       value="@(Model.FromDateFilter?.ToString("yyyy-MM-dd"))"
                       class="block w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500" />
            </div>
            <div>
                <label for="toDate" class="block text-gray-700 text-sm font-medium mb-1">To Date</label>
                <input type="date" id="toDate" name="toDate"
                       value="@(Model.ToDateFilter?.ToString("yyyy-MM-dd"))"
                       class="block w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500" />
            </div>
            <div>
                <label for="workTypeId" class="block text-gray-700 text-sm font-medium mb-1">Work Type</label>
                <select asp-for="WorkTypeFilter"
                        asp-items="@(new SelectList(Model.WorkTypes, "WorkTypeId", "TypeName"))"
                        class="block w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500">
                    <option value="">-- Select --</option>
                </select>
            </div>
            <div class="flex space-x-2">
                <button type="submit"
                        class="common-btn">
                    Search
                </button>
                <a href="@Url.Action("Index", "ViewWork")"
                   class="flex-1 px-4 py-2 bg-green-600 text-white rounded-lg font-semibold hover:bg-green-700 transition text-center">
                    Refresh
                </a> 
            </div>
        </form>

        <!-- WRAP RESULTS & PAGINATION FOR AJAX UPDATES -->
        <div id="resultsTableContainer">
            @* Initially render the results using the partial view for consistency 
            @await Html.PartialAsync("_WorkOrderResultsPartial", Model)
        </div> <!-- END resultsTableContainer -->

    </div>

    <div id="workOrderModal"
         class="fixed inset-0 z-50 hidden items-center justify-center bg-gray-800 bg-opacity-50 overflow-auto">
        <div class="bg-white rounded-lg shadow-lg w-full max-w-6xl mx-auto relative my-16">
            <div class="flex items-center justify-between border-b px-6 py-4">
                <h5 class="text-xl font-semibold">Work Orders</h5>
                <button type="button"
                        class="text-gray-600 hover:text-gray-900 text-2xl font-bold"
                        id="modalCloseBtn">
                    &times;
                </button>
            </div>
            <div id="workOrderModalContent" class="p-6 min-h-[300px] text-gray-700">
                Loading...
            </div>
        </div>
    </div>
</div> *@

@* <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {

        var pageCache = {};

        function loadPage(page) {
            if (pageCache[page]) {
                $('#resultsTableContainer').html(pageCache[page]);
                attachLinkAndPaginationHandlers();
            } else {
                $('#resultsTableContainer').html('<p class="text-center py-6 text-gray-500">Loading...</p>');

                var data = {
                    studio: $('select[name="studio"]').val(),
                    fromDate: $('input[name="fromDate"]').val(),
                    toDate: $('input[name="toDate"]').val(),
                    workTypeId: $('select[name="workTypeId"]').val(),
                    isSearch: true,
                    currentPage: page
                };

                $.get('@Url.Action("Index", "ViewWork")', data)
                    .done(function (html) {
                        pageCache[page] = html;
                        $('#resultsTableContainer').html(html);
                        attachLinkAndPaginationHandlers();
                    })
                    .fail(function () {
                        $('#resultsTableContainer').html('<p class="text-red-500 text-center py-6">Error loading page data.</p>');
                    });
            }
        }

        function attachLinkAndPaginationHandlers() {
            $('#resultsTableContainer').find('button.ajaxPageBtn').off('click').on('click', function (e) {
                e.preventDefault();
                var page = $(this).val();
                loadPage(page);
            });

            $('#resultsTableContainer').find('a[data-id]').off('click').on('click', function (e) {
                e.preventDefault();
                var id = $(this).data('id');
                $('#workOrderModalContent').html('Loading...');
                $('#workOrderModal').removeClass('hidden').addClass('flex');
                $.get('@Url.Action("GetWorkOrderDetails", "WorkOrder")', { id: id })
                    .done(function (data) {
                        $('#workOrderModalContent').html(data);
                    })
                    .fail(function () {
                        $('#workOrderModalContent').html('<p class="text-red-500">Error loading details.</p>');
                    });
            });
        }

        attachLinkAndPaginationHandlers();

        $('#modalCloseBtn, #workOrderModal').on('click', function (e) {
            if (e.target === this) {
                $('#workOrderModal').addClass('hidden').removeClass('flex');
            }
        });

        $('form[asp-action="Search"]').on('submit', function () {
            pageCache = {}; // clear cache on new search
        });
    });
</script> *@


@model InternalProj.ViewModel.WorkOrderViewModel

@{
    ViewBag.Title = "View Work Orders";
    var slno = (Model.CurrentPage - 1) * 10 + 1;
    var counter = slno;
}

<div class="common-pages-layout">
    <div class="common-inner-container">
        <h3 class="page-heading">View Work Order</h3>

        <!-- 🔹 SEARCH FORM -->
        <form asp-action="Search" method="get" id="searchForm">
            <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
                <!-- Studio -->
                <div>
                    <label for="studioSelect" class="block text-gray-700 font-medium mb-1">Studio</label>
                    <select id="studioSelect" name="studio"
                            class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm
                               focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                        <option value="">All</option>
                        @foreach (var studio in Model.StudioList)
                        {
                            <option value="@studio" selected="@(Model.StudioFilter == studio ? "selected" : null)">
                                @studio
                            </option>
                        }
                    </select>

                </div>

                <!-- From Date -->
                <div>
                    <label class="block text-gray-700 font-medium mb-1">From Date</label>
                    <input type="date" name="fromDate"
                           class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm
                          focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                           value="@Model.FromDateFilter?.ToString("yyyy-MM-dd")" />
                </div>

                <!-- To Date -->
                <div>
                    <label class="block text-gray-700 font-medium mb-1">To Date</label>
                    <input type="date" name="toDate"
                           class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm
                          focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                           value="@Model.ToDateFilter?.ToString("yyyy-MM-dd")" />
                </div>

                <!-- Work Type -->
                <div>
                    <label class="block text-gray-700 font-medium mb-1">Work Type</label>
                    <select name="workTypeId"
                            class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm
                               focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                        <option value="">--Select--</option>
                        @foreach (var wt in Model.WorkTypes)
                        {
                            <option value="@wt.WorkTypeId" selected="@(Model.WorkTypeFilter == wt.WorkTypeId ? "selected" : null)">
                                @wt.TypeName
                            </option>
                        }
                    </select>
                </div>
            </div>

            <div class="flex justify-end">
                <button type="submit" class="common-btn bg-blue-600 hover:bg-blue-700">Search</button>
            </div>
        </form>

        <!-- DOWNLOAD BUTTONS -->
        <div id="downloadSection" class="flex justify-end mb-6 hidden">
            <div class="relative inline-block text-left">
                <button type="button"
                        class="common-btn bg-indigo-600 hover:bg-indigo-700 flex items-center"
                        id="downloadMenuButton">
                    Download
                    <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M19 9l-7 7-7-7" />
                    </svg>
                </button>

                <!-- Dropdown -->
                <div id="downloadDropdown"
                     class="hidden absolute right-0 mt-2 w-40 bg-white border border-gray-200 rounded-lg shadow-lg z-50">
                    <form asp-action="DownloadExcel" method="post" class="block">
                        <input type="hidden" name="studio" value="@Model.StudioFilter" />
                        <input type="hidden" name="fromDate" value="@Model.FromDateFilter?.ToString("yyyy-MM-dd")" />
                        <input type="hidden" name="toDate" value="@Model.ToDateFilter?.ToString("yyyy-MM-dd")" />
                        <input type="hidden" name="workTypeId" value="@Model.WorkTypeFilter" />
                        <input type="hidden" name="page" value="@Model.CurrentPage" />
                        @* <input type="hidden" name="pageSize" value="@Model.PageSize" /> *@
                        <button type="submit" class="w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                            📊 Excel
                        </button>
                    </form>
                    <form asp-action="DownloadPdf" method="post" class="block">
                        <input type="hidden" name="studio" value="@Model.StudioFilter" />
                        <input type="hidden" name="fromDate" value="@Model.FromDateFilter?.ToString("yyyy-MM-dd")" />
                        <input type="hidden" name="toDate" value="@Model.ToDateFilter?.ToString("yyyy-MM-dd")" />
                        <input type="hidden" name="workTypeId" value="@Model.WorkTypeFilter" />
                        <input type="hidden" name="currentPage" value="@Model.CurrentPage" />
                        <input type="hidden" name="pageSize" value="10" />
                        <button type="submit" class="w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                            📄 PDF
                        </button>
                    </form>

                </div>
            </div>
        </div>

        <!-- RESULTS TABLE -->
        <div id="resultsTableContainer">
            @await Html.PartialAsync("_WorkOrderResultsPartial", Model)
        </div>
    </div>
</div>

@section Scripts {

    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    <script>
            var pageCache = {};

            function showDownloadSection() {
                $('#downloadSection').removeClass('hidden');
            }

            function loadPage(page) {
                var data = $('#searchForm').serialize() + "&page=" + page;
                $.get('@Url.Action("Index", "ViewWork")', data)
                    .done(function (html) {
                        pageCache[page] = html;
                        $('#resultsTableContainer').html(html);
                        attachHandlers();
                        showDownloadSection(); 
                    });
            }

            function attachHandlers() {
                // pagination
                $('#resultsTableContainer').find('.pagination a').off('click').on('click', function (e) {
                    e.preventDefault();
                    var page = $(this).data('page');
                    loadPage(page);
                });
            }

            // search submit
            $('#searchForm').on('submit', function (e) {
                e.preventDefault();
                pageCache = {};
                $('#downloadSection').addClass('hidden');
                loadPage(1);
            });

            // toggle download dropdown
            $('#downloadMenuButton').on('click', function (e) {
                e.stopPropagation();
                $('#downloadDropdown').toggleClass('hidden');
            });

            // hide dropdown if clicked outside
            $(document).on('click', function (e) {
                if (!$(e.target).closest('#downloadSection').length) {
                    $('#downloadDropdown').addClass('hidden');
                }
            });

            // auto-close dropdown when option clicked
            $('#downloadDropdown form button').on('click', function () {
                $('#downloadDropdown').addClass('hidden');
            });

            // Initialize Select2
            $('#studioSelect').select2({
                placeholder: "Search Studio",
                allowClear: true,
                width: '100%' 
            });

        $('#downloadSection form').on('submit', function () {
            var searchData = $('#searchForm').serializeArray();

            searchData.forEach(function (item) {
                if ($(this).find('input[name="' + item.name + '"]').length) {
                    $(this).find('input[name="' + item.name + '"]').val(item.value);
                } else {
                    $('<input>').attr({
                        type: 'hidden',
                        name: item.name,
                        value: item.value
                    }).appendTo(this);
                }
            }, this);
        });


    </script>
}