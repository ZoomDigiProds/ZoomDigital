@{
    ViewBag.Title = "State Management";
    var activeStates = ViewBag.ActiveStates as List<InternalProj.Models.StateMaster>;
    var inactiveStates = ViewBag.InactiveStates as List<InternalProj.Models.StateMaster>;
    Layout = null;
}

<div class="state-mgmt-dashboard bg-blue-600">
        <h3 class="page-heading">States Status Management</h3>

    <div class="states-section">

        <div class="state-block glass-card inactive">
            <h2 class="inactive-label">
                Inactive States
            </h2>
            <ul id="inactiveStatesList">
                @foreach (var state in inactiveStates)
                {
                    <li class="state-item fade-in"
                        onclick="selectState(this)"
                        data-id="@state.Id"
                        data-active="N">
                        <span class="state-name">@state.Name</span>
                        <button type="button" onclick="event.stopPropagation(); enableEdit(this)" class="edit-pen" title="Edit">
                            <i class="fa fa-edit"></i>
                        </button>
                    </li>
                }
            </ul>
        </div>

        <div class="move-button glass-card flex-center">
            <button type="button" onclick="moveSelected()" class="pulse-btn" title="Move State">
                <span>⇄</span>
            </button>
        </div>

        <div class="state-block glass-card active">
            <h2 class="active-label">
                Active States
            </h2>
            <ul id="activeStatesList">
                @foreach (var state in activeStates)
                {
                    <li class="state-item fade-in"
                        onclick="selectState(this)"
                        data-id="@state.Id"
                        data-active="Y">
                        <span class="state-name">@state.Name</span>
                        <button type="button" onclick="event.stopPropagation(); enableEdit(this)" class="edit-pen" title="Edit">
                            <i class="fa fa-edit"></i>
                        </button>
                    </li>
                }
            </ul>
        </div>

        
    </div>

    <div class="add-state-glass glass-card">
        <div class="page-heading">
            Add New State
        </div>
        <form id="addStateForm">
            <input type="text" id="stateName" name="stateName" placeholder="State name..." required />
            <input type="hidden" id="Active" name="Active" value="Y" />
            <button type="submit" class="common-btn">
                Add
            </button>
        </form>
    </div>
</div>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" />

<style>
    body {
        min-height: 100vh;
        margin: 0;
        background: #f0f9ff;
    }

    .state-mgmt-dashboard {
        max-width: 1170px;
        margin: 28px auto 0;
        padding: 0 20px 50px 20px;
    }

    .dashboard-header {
        display: flex;
        align-items: center;
        padding: 10px;
        border-radius: 1.5rem;
        margin-bottom: 32px;
        background: rgba(255,255,255,0.78);
        box-shadow: 0 8px 30px #b2b6ff44, 0 1.5px 6px #6a95f522;
        border: 1px solid #e0e7ff6a;
    }

        .dashboard-header h1 {
            font-size: 2.5rem;
            font-weight: 800;
            letter-spacing: -2px;
            margin: 0;
            color: black;
            display: inline-block;
        }

            .dashboard-header h1 span {
                color: #223642;
            }

    /* States Section */
    .states-section {
        display: flex;
        justify-content: center;
        align-items: center; /* ✅ Move button vertically centered */
        gap: 42px;
        margin-bottom: 38px;
    }

    .state-block {
        flex: 1 1 300px;
        min-width: 40px;
        min-height: 250px;
        padding: 20px 18px 20px 18px;
        border-radius: 2rem;
        backdrop-filter: blur(8px);
        position: relative;
        box-shadow: 0 6px 32px #4b6cf14c, 0 2px 10px #bad7ff55;
    }

        .state-block.active {
            border: 2px solid grey;
        }

        .state-block.inactive {
            border: 2px solid grey;
        }

        .state-block h2 {
            font-size: 1.32rem;
            font-weight: 700;
            margin-bottom: 16px;
            letter-spacing: 1px;
            display: flex;
            align-items: center;
            gap: 7px;
        }

    ul#inactiveStatesList, ul#activeStatesList {
        list-style: none;
        margin: 0;
        padding: 0;
        max-height: 300px;
        overflow-y: auto;
        scrollbar-width: thin;
        scrollbar-color: #bccbe2 #f6f8fe;
    }

    .state-item {
        background: rgba(255,255,255,0.78);
        border-radius: 5px;
        padding: 5px;
        margin-bottom: 8px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-weight: 500;
        color: #354057;
        border: 2px solid transparent;
        cursor: pointer;
        transition: all 0.2s;
    }

        .state-item:hover {
            background: #eef6ff;
            border-color: #3b82f6;
        }

        .state-item.selected {
            background: linear-gradient(90deg, #5eeab1 10%, #3b82f6 90%);
            color: #fff !important;
            border-color: #3749b4;
            box-shadow: 0 4px 16px #22d3ee57;
            transform: scale(1.04);
        }

    .state-name {
        flex: 2;
    }

    .edit-pen {
        background: none;
        border: none;
        color: #3470ef;
        font-size: 1.12em;
        margin-left: 5px;
        padding: 2px 5px;
        border-radius: 6px;
        opacity: 0.7;
    }

        .edit-pen:hover {
            opacity: 1;
            background: #e8f2ff;
        }

    .move-button {
        background: rgba(240, 249, 255, 0.95);
        border-radius: 50%;
        box-shadow: 0 4px 20px #60a5fa33, 0 2px 8px #3b82f644;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .pulse-btn {
        font-size: 2.5em;
        cursor: pointer;
        border: none;
        border-radius: 100%;
        background: #2dd4bf;
        color: #fff;
        width: 45px;
        height: 45px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .pulse-btn:hover {
            transform: scale(1.1);
        }

    .add-state-glass {
        margin: 34px auto 0;
        max-width: 320px;
        padding: 20px;
        display: flex;
        flex-direction: column;
        align-items: center;
        border-radius: 2rem;
        box-shadow: 0 6px 32px #4b6cf14c, 0 2px 10px #bad7ff55;       
    }

    .add-label {
        font-weight: bold;
        font-size: 1.22em;
        color: #2563eb;
        letter-spacing: 1.5px;
        margin-bottom: 0.7rem;
    }

    #addStateForm {
        display: flex;
        gap: 8px;
        margin-top: 10px;
    }

        #addStateForm input[type="text"] {
            width: 200px;
            padding: 11px 16px;
            border: 1.5px solid #b4c9e1;
            border-radius: 12px;
            font-size: 1em;
            background: #f3faff;
        }

            #addStateForm input[type="text"]:focus {
                border-color: #3b82f6;
            }

    .edit-input {
        padding: 7px 12px;
        border-radius: 7px;
        border: 1.5px solid #b8dbf5;
        font-size: 1em;
        width: 70%;
        background: #f8fbff;
    }
</style>

<!-- JS: same as your logic! -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    let selectedStates = [];

    function selectState(element) {
        const $el = $(element);
        if ($el.hasClass("selected")) {
            $el.removeClass("selected");
            selectedStates = selectedStates.filter(item => item !== element);
        } else {
            $el.addClass("selected");
            selectedStates.push(element);
        }
    }

    function moveSelected() {
        if (selectedStates.length === 0) {
            alert("Please select one or more states to move.");
            return;
        }

        const ids = selectedStates.map(el => $(el).data("id"));

        $.ajax({
            url: '/StateData/ToggleStates',
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(ids),
            success: function (response) {
                if (response.success) {
                    selectedStates.forEach(function (el) {
                        const $el = $(el);
                        const isActive = $el.data("active") === "Y";
                        $el.removeClass("selected").fadeOut(200, function () {
                            $el.data("active", isActive ? "N" : "Y");
                            const newList = isActive ? "#inactiveStatesList" : "#activeStatesList";
                            $(newList).append($el);
                            $el.fadeIn(220);
                        });
                    });
                    selectedStates = [];
                } else {
                    alert("Something went wrong.");
                }
            }
        });
    }

    function enableEdit(editBtn) {
        const li = $(editBtn).closest("li");
        const stateId = li.data("id");
        const currentName = li.find(".state-name").text();

        li.find(".edit-pen").remove();
        li.find(".state-name").replaceWith(`<input type="text" class="edit-input" value="${currentName}" />`);
        const input = li.find(".edit-input");
        input.focus();

        input.on("blur", function () {
            saveStateEdit(li, stateId, currentName, $(this).val().trim());
        });
        input.on("keypress", function (e) {
            if (e.which === 13) { e.preventDefault(); input.blur(); }
        });
    }

    function saveStateEdit(li, stateId, oldName, newName) {
        if (!newName || newName === oldName) {
            li.find(".edit-input").replaceWith(`<span class="state-name">${oldName}</span>`);
            li.append(`<button type="button" class="edit-pen" onclick="event.stopPropagation(); enableEdit(this)" title="Edit"><i class="fa fa-edit"></i></button>`);
            return;
        }
        $.ajax({
            url: '/StateData/EditState',
            method: 'POST',
            data: { id: stateId, newName: newName },
            success: function (response) {
                if (response.success) {
                    li.find(".edit-input").replaceWith(`<span class="state-name">${newName}</span>`);
                } else {
                    alert(response.message || "Failed to update state.");
                    li.find(".edit-input").replaceWith(`<span class="state-name">${oldName}</span>`);
                }
                li.append(`<button type="button" class="edit-pen" onclick="event.stopPropagation(); enableEdit(this)" title="Edit"><i class="fa fa-edit"></i></button>`);
            },
            error: function () {
                alert("Error updating state.");
                li.find(".edit-input").replaceWith(`<span class="state-name">${oldName}</span>`);
                li.append(`<button type="button" class="edit-pen" onclick="event.stopPropagation(); enableEdit(this)" title="Edit"><i class="fa fa-edit"></i></button>`);
            }
        });
    }

    $('#addStateForm').submit(function (e) {
        e.preventDefault();
        const stateName = $('#stateName').val().trim();
        const isActive = "Y";

        if (!stateName) {
            alert("Please enter a state name.");
            return;
        }

        $.ajax({
            url: '/StateData/AddState',
            method: 'POST',
            data: { stateName: stateName, Active: isActive },
            success: function (response) {
                if (response.success) {
                    const newItem = $('<li></li>')
                        .addClass('state-item fade-in')
                        .attr('data-id', response.stateId)
                        .attr('data-active', isActive)
                        .html(`<span class="state-name">${stateName}</span>
                               <button type="button" class="edit-pen" onclick="event.stopPropagation(); enableEdit(this)" title="Edit"><i class="fa fa-edit"></i></button>`)
                        .click(function () { selectState(this); });
                    $('#activeStatesList').append(newItem);
                    $('#stateName').val('');
                } else {
                    alert(response.message || "Failed to add state.");
                }
            },
            error: function () {
                alert("Something went wrong while adding the state.");
            }
        });
    });
</script>
