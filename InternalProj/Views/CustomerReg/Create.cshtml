@model InternalProj.ViewModel.CustomerRegViewModel

@{
    ViewData["Title"] = "Customer Registration";
    var staffName = Context.Session.GetString("StaffId");
}
<style>
    .label{
        display: block;
        color: #374151;
        font-weight: 600;
        margin-bottom: 0.25rem;
    }

    .input {
        width: 100%;
        padding: 0.5rem 0.75rem;
        border: 1px solid #d1d5db;
        border-radius: 6px;
    }

        .input:focus {
            outline: none;
            box-shadow: 0 0 0 2px #2563eb;
        }

</style>
<div class="common-pages-layout">
    <div class="common-inner-container">
        <h3 class="page-heading">Customer Registration</h3>

         @if (TempData["SuccessMessage"] != null)
        {
            <div id="success" class="alert alert-success">
                @TempData["SuccessMessage"]
            </div>
        } 

        @if (TempData["ErrorMessage"] != null)
        {
            <div id="error" class="alert alert-error">
                @TempData["ErrorMessage"]
            </div>
        }

        <script>
            setTimeout(() => {
                $('#success').fadeOut('slow');
            }, 1500);

            setTimeout(() => {
                const error = document.getElementById('error');
                if (error) error.classList.add('opacity-0', 'transition-opacity', 'duration-500');
                setTimeout(() => error?.remove(), 600);
            }, 1500);
        </script>

        <div class="custom-form-wrapper">
            <form asp-action="Create" method="post" class="custom-form">
                <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
                    <div>
                        <label asp-for="FirstName" class="label required-label"></label>
                        <input asp-for="FirstName" class="input" />
                        <span asp-validation-for="FirstName" class="text-red-600 text-sm"></span>
                    </div>

                    <div>
                        <label asp-for="LastName" class="label required-label"></label>
                        <input asp-for="LastName" class="input" />
                        <span asp-validation-for="LastName" class="text-red-600 text-sm"></span>
                    </div>

                    <div>
                        <label asp-for="Studio" class="label required-label"></label>
                        <input asp-for="Studio" class="input" />
                        <span asp-validation-for="Studio" class="text-red-600 text-sm"></span>
                    </div>

                    <div>
                        <label for="Discount" class="label required-label">Discount</label>
                        <input type="number" name="Discount" min="0" max="100" step="0.01" required
                               class="input" />
                        <span asp-validation-for="Discount" class="text-red-600 text-sm"></span>
                    </div>

                    <div>
                        <label asp-for="Address1" class="label required-label"></label>
                        <input asp-for="Address1" class="input" />
                        <span asp-validation-for="Address1" class="text-red-600 text-sm"></span>
                    </div>

                    <div>
                        <label asp-for="Address2" class="label"></label>
                        <input asp-for="Address2" class="input" />
                        <span asp-validation-for="Address2" class="text-red-600 text-sm"></span>
                    </div>

                    <div>
                        <label for="StateId" class="label required-label">State</label>
                        <select id="StateId" name="StateId" required
                                class="input">
                            <option value="">-- Select State --</option>
                            @foreach (var state in Model.StateMasterRegs)
                            {
                                <option value="@state.Id">@state.Name</option>
                            }
                        </select>
                        <a href="#" data-bs-toggle="modal" data-bs-target="#addStateModal" class="text-blue-700 hover:underline text-sm mt-1 inline-block">Add State</a>
                    </div>

                    <div>
                        <label for="RegionId" class="label required-label">Region</label>
                        <select id="RegionId" name="RegionId" required
                                class="input">
                            <option value="">-- Select Region --</option>
                            @foreach (var region in Model.RegionMasterRegs)
                            {
                                <option value="@region.Id">@region.Name</option>
                            }
                        </select>
                        <a href="#" data-bs-toggle="modal" data-bs-target="#addRegionModal" class="text-blue-700 hover:underline text-sm mt-1 inline-block">Add Region</a>
                    </div>

                    <div>
                        <label for="Phone1" class="label required-label">Phone 1</label>
                        <input type="text" name="Phone1" required pattern="^\+?[0-9]{7,15}$"
                               class="input" />
                    </div>

                    <div>
                        <label for="Phone2" class="label">Phone 2</label>
                        <input type="text" name="Phone2" pattern="^\+?[0-9]{7,15}$"
                               class="input" />
                    </div>

                    <div>
                        <label for="Whatsapp" class="label">WhatsApp</label>
                        <input type="text" name="Whatsapp" pattern="^\+?[0-9]{7,15}$"
                               class="input" />
                    </div>

                    <div>
                        <label for="Email" class="label required-label">Email</label>
                        <input type="email" name="Email"
                               class="input" />
                    </div>

                    <div>
                        <label for="PhoneTypeId" class="label required-label">Phone Type</label>
                        <select name="PhoneTypeId" required
                                class="input">
                            <option value="">-- Select Phone Type --</option>
                            @foreach (var type in Model.PhoneTypes)
                            {
                                <option value="@type.PhoneTypeId">@type.PhoneTypeName</option>
                            }
                        </select>
                    </div>

                    <div>
                        <label for="CategoryId" class="label required-label">Customer Category</label>
                        <select name="CategoryId" required
                                class="input">
                            <option value="">-- Select Category --</option>
                            @foreach (var category in Model.CustomerCategories)
                            {
                                <option value="@category.CategoryId">@category.CategoryName</option>
                            }
                        </select>
                    </div>

                    <div>
                        <label for="BranchId" class="label required-label">Branch</label>
                        <select name="BranchId" required
                                class="input">
                            <option value="">-- Select Branch --</option>
                            @foreach (var branch in Model.Branches)
                            {
                                <option value="@branch.BranchId">@branch.BranchName</option>
                            }
                        </select>
                    </div>

                    <div>
                        <label for="RateTypeId" class="label required-label">Rate Type</label>
                        <select name="RateTypeId" required
                                class="input">
                            <option value="">-- Select RateType --</option>
                            @foreach (var type in Model.RateTypes)
                            {
                                <option value="@type.RateTypeId">@type.RateTypeName</option>
                            }
                        </select>
                    </div>

                    <div class="hidden">
                        <input type="hidden" name="Staff" value="@staffName" />
                    </div>
                </div>

                <div class="mt-8 flex justify-center">
                    <button type="submit"
                            class="common-btn">
                        Register
                    </button>
                </div>

            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="addStateModal" tabindex="-1" aria-labelledby="addStateModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form id="addStateForm" class="bg-white rounded-lg shadow-lg p-6 max-w-md mx-auto">
            <div class="modal-content">
                <div class="modal-header flex justify-between items-center mb-4">
                    <h5 class="modal-title text-xl font-bold">Add New State</h5>
                    <button type="button" class="btn-close text-gray-600 hover:text-gray-900" data-bs-dismiss="modal" aria-label="Close">&times;</button>
                </div>
                <div class="modal-body space-y-4">
                    <div>
                        <label for="newStateName" class="label">State Name</label>
                        <input type="text" id="newStateName" class="input" required />
                    </div>
                    <div>
                        <label for="newStateActive" class="label">Active</label>
                        <select id="newStateActive" class="input">
                            <option value="Y">Yes</option>
                            <option value="N">No</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer mt-6 text-right">
                    <button type="submit" class="common-btn">Add State</button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="modal fade" id="addRegionModal" tabindex="-1" aria-labelledby="addRegionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form id="addRegionForm" class="bg-white rounded-lg shadow-lg p-6 max-w-md mx-auto">
            <div class="modal-content">
                <div class="modal-header flex justify-between items-center mb-4">
                    <h5 class="modal-title text-xl font-bold">Add New Region</h5>
                    <button type="button" class="btn-close text-gray-600 hover:text-gray-900" data-bs-dismiss="modal" aria-label="Close">&times;</button>
                </div>
                <div class="modal-body space-y-4">
                    <div>
                        <label for="newRegionName" class="label">Region Name</label>
                        <input type="text" id="newRegionName" class="input" required />
                    </div>
                    <div>
                        <label for="newRegionStateId" class="label">State</label>
                        <select id="newRegionStateId" class="input" required>
                            <option value="">-- Select State --</option>
                            @foreach (var state in Model.StateMasterRegs)
                            {
                                <option value="@state.Id">@state.Name</option>
                            }
                        </select>
                    </div>
                    <div>
                        <label for="newRegionActive" class="label">Active</label>
                        <select id="newRegionActive" class="input">
                            <option value="Y">Yes</option>
                            <option value="N">No</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer mt-6 text-right">
                    <button type="submit" class="common-btn">Add Region</button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('StateId').addEventListener('change', function () {
            var stateId = this.value;

            fetch('/CustomerReg/GetRegionsByState?stateId=' + stateId)
                .then(response => response.json())
                .then(data => {
                    var regionSelect = document.getElementById('RegionId');
                    regionSelect.innerHTML = '<option value="">-- Select Region --</option>';
                    data.forEach(region => {
                        var option = document.createElement('option');
                        option.value = region.id;
                        option.text = region.name;
                        regionSelect.appendChild(option);
                    });
                });
        });

        document.getElementById('addStateForm').addEventListener('submit', function (e) {
            e.preventDefault();

            const name = document.getElementById('newStateName').value;
            const active = document.getElementById('newStateActive').value;

            fetch('/State/Add', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ Name: name, Active: active })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const stateSelect = document.getElementById('StateId');
                        const option = document.createElement('option');
                        option.value = data.id;
                        option.text = data.name;
                        option.selected = true;
                        stateSelect.appendChild(option);

                        const modalEl = document.getElementById('addStateModal');
                        const modalInstance = bootstrap.Modal.getInstance(modalEl);
                        modalInstance.hide();

                        stateSelect.dispatchEvent(new Event('change'));
                    }
                });
        });

        document.getElementById('addRegionForm').addEventListener('submit', function (e) {
            e.preventDefault();

            const name = document.getElementById('newRegionName').value;
            const stateId = document.getElementById('newRegionStateId').value;
            const active = document.getElementById('newRegionActive').value;

            fetch('/Region/Add', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ Name: name, StateId: stateId, Active: active })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const regionSelect = document.getElementById('RegionId');
                        const option = document.createElement('option');
                        option.value = data.id;
                        option.text = data.name;
                        option.selected = true;
                        regionSelect.appendChild(option);

                        const modalEl = document.getElementById('addRegionModal');
                        const modalInstance = bootstrap.Modal.getInstance(modalEl);
                        modalInstance.hide();
                    }
                });
        });
    </script>
}
