@model IEnumerable<InternalProj.Models.StudioCallLog>

@{
    ViewData["Title"] = "Call Logs";
    var today = DateTime.Today;
    var currentPage = (int)(ViewBag.CurrentPage ?? 1);
    var totalPages = (int)(ViewBag.TotalPages ?? 1);
}

<div class="common-pages-layout">
    <div class="common-inner-container">
        <h3 class="page-heading">Call Logs</h3>

<p>
    <a asp-action="Create" class="btn btn-secondary">Create New</a>
</p>

<table class="table table-bordered" id="callLogTable">
    <thead class="thead-dark">
        <tr>
            <th>Studio Name</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Phone)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Region)</th>
            <th>Call Time</th>
            <th>Comment</th>
            <th>Next Scheduled Call</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var item in Model)
            {
                @* bool isToday = item.UpdatedCallTime?.Date == today; *@
                bool isTodayUpdatedCall = item.UpdatedCallTime.HasValue &&
                item.UpdatedCallTime.Value.ToLocalTime().Date == today;

                @* <tr data-callid="@item.CallId" class="@(isUpcomingToday ? "table-success" : "")"> *@
                <tr data-callid="@item.CallId" class="@(isTodayUpdatedCall ? "table-success" : "")">

                    <td>
                        <a asp-action="Edit" asp-route-id="@item.CallId">@item.StudioName</a>
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                    <td>@Html.DisplayFor(modelItem => item.Region)</td>
                    <td>@item.CallTime.ToLocalTime().ToString("dd MMM yyyy, h:mm tt")</td>
                    <td>@Html.DisplayFor(modelItem => item.Description)</td>
                    <td>@(item.UpdatedCallTime.HasValue ? item.UpdatedCallTime.Value.ToLocalTime().ToString("dd MMM yyyy") : "")</td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="6" class="text-center text-danger">No records found for this page.</td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination Section -->
<div class="pagination-container text-center mt-3">
    <div class="pagination-buttons d-inline-flex flex-wrap justify-content-center gap-1">
        @if (currentPage > 1)
        {
            <button class="btn btn-outline-secondary btn-sm" onclick="loadPage(@(currentPage - 1))">&lt;</button>
        }

        <button class="btn btn-outline-primary btn-sm @(currentPage == 1 ? "active" : "")" onclick="loadPage(1)">1</button>

        @if (currentPage > 3)
        {
            <span class="px-2">...</span>
        }

        @for (int i = Math.Max(2, currentPage - 1); i <= Math.Min(totalPages - 1, currentPage + 1); i++)
        {
            <button class="btn btn-outline-primary btn-sm @(i == currentPage ? "active" : "")" onclick="loadPage(@i)">@i</button>
        }

        @if (currentPage < totalPages - 2)
        {
            <span class="px-2">...</span>
        }

        @if (totalPages > 1)
        {
            <button class="btn btn-outline-primary btn-sm @(currentPage == totalPages ? "active" : "")" onclick="loadPage(@totalPages)">@totalPages</button>
        }

        @if (currentPage < totalPages)
        {
            <button class="btn btn-outline-secondary btn-sm" onclick="loadPage(@(currentPage + 1))">&gt;</button>
        }
    </div>
</div>
</div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        function loadPage(pageNumber) {
            window.location.href = '@Url.Action("Index", "StudioCallLogs")' + '?page=' + pageNumber;
        }
    </script>
}
<style>
    .pagination-container button.active {
        background-color: #64126b;
        color: white;
        font-weight: bold;
    }

    .pagination-container button:hover {
        background-color: #64126b;
        color: white;
    }

    .pagination-container .btn {
        min-width: 36px;
        padding: 4px 10px;
        border-radius: 20px;
        border: 1px solid #64126b;
        color: #64126b;
        background-color: white;
    }

    .pagination-container {
        text-align: center;
    }

    .table-success {
        background-color: #d4edda !important;
    }
</style>

