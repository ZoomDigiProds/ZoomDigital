@* @model InternalProj.ViewModel.InvoiceViewModel


@if (ViewContext.RouteData.Values["controller"]?.ToString() == "Invoice")
{
    <link rel="stylesheet" href="~/css/invoice.css" />
}

@section Styles {
    <link rel="stylesheet" href="~/css/invoice.css" asp-append-version="true" />
}


 
@Html.ValidationSummary(true, "", new { @class = "text-danger" })


@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<h1 class="text-center">Invoice</h1>
 
<form asp-controller="Invoice" asp-action="CreateInvoice" method="post">
    <div class="row">
        <div class="col-md-8">
            <div class="row">
                <div class="col-md-6 mb-4">
                    <label class="form-label">Bill No</label>
                    <input class="form-control" value="@Model.Invoice.InvoiceId" readonly />
                </div>
                <div class="col-md-6 mb-4">
                    <label class="form-label required-label">Bill Date</label>
                    <input class="form-control" value="@Model.Invoice.BillDate.ToString("dd-MM-yyyy")" readonly />
                </div>
                <div class="col-md-6 mb-4">
                    <label class="form-label required-label">Customer</label>
                    <select id="customerDropdown" asp-for="Invoice.CustomerId" class="form-select">
                        <option value="">-- Select Customer --</option>
                        @foreach (var c in Model.Customers)
                        {
                            <option value="@c.Id">@c.StudioName</option>
                        }
                    </select>
                </div> 
                <div class="col-md-6 mb-4">
                    <label class="form-label required-label">Studio</label>
                    <input id="studioField" class="form-control" readonly />
                </div>
                <div class="col-md-6 mb-4">
                    <label class="form-label required-label">Customer Name</label>
                    <input id="customerNameField" class="form-control" readonly />
                </div>
                <div class="col-md-6 mb-4">
                    <label class="form-label required-label">Address</label>
                    <input id="addressField" class="form-control" readonly />
                </div>
                <div class="col-md-6 mb-4">
                    <label>Mobile</label>
                    <input id="mobileField" class="form-control" readonly />
                </div>
                <div class="col-md-6 mb-4">
                    <label class="form-label required-label">Order No</label>
                    <input id="orderNoField" class="form-control" />
                    <input type="hidden" asp-for="Invoice.WorkOrderId" />
                </div>
            </div>
        </div>


        <input type="hidden" asp-for="Invoice.InvoiceId" />
        <input type="hidden" asp-for="Invoice.WorkOrderId" />
        <input type="hidden" asp-for="Invoice.BillDate" />

        <div class="col-md-4">
            <div class="border p-2 mb-3">
                <strong>Outstanding:</strong> ₹<span id="outstandingAmount">0.00</span>
            </div>
            <div class="form-check mb-3">
                <input type="checkbox" id="multiWorkOrderCheck" class="form-check-input" />
                <label class="form-check-label" for="multiWorkOrderCheck">Multi WorkOrder</label>
            </div>
            <div id="workOrderListBox" class="border p-2" style="height: 200px; overflow-y: auto;"></div>
        </div>
    </div>

    <hr />

    <h5>Work Details</h5>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Sl.No</th>
                <th>Particulars</th>
                <th>Qty</th>
                <th>Rate</th>
                <th>GTotal</th>
            </tr>
        </thead>
        <tbody id="workDetailsBody"></tbody>
    </table>

    <div class="row">
        <div class="col-md-6">
            <div class="mb-3">
                <label>Advance</label>
                <input id="advanceField" class="form-control" readonly />
            </div>
            <div class="mb-3">
                <label>Balance</label>
                <input id="balanceField" class="form-control" readonly />
            </div>
            <div class="mb-3">
                <label>SubTotal</label>
                <input id="subTotalField" class="form-control" readonly />
            </div>
            <div class="mb-3">
                <label>Discount</label>
                <input asp-for="Invoice.Discount" class="form-control" value="@Model.Invoice.Discount" />
                
            </div>
            <div class="mb-3">
                <label class="required-label">Mode of Payment</label>
                <select asp-for="Invoice.ModeId" class="form-select">
                    
                    <option value="">-- Select Payment Mode --</option>
                    @foreach (var mode in Model.PaymentModes)
                    {
                        <option value="@mode.ModeId">@mode.ModeType</option>
                    }
                </select>
            </div>
        </div>

        <div class="col-md-6">
            <div class="mb-3">
                <label>Tax</label>
                <input asp-for="Invoice.Tax" class="form-control" value="@Model.Invoice.Tax" />                
            </div>
            <div class="mb-3">
                <label>Cess</label>
                <input asp-for="Invoice.Cess" class="form-control" value="@Model.Invoice.Cess" />
            </div>
            <div class="mb-3">
                <label>Commission</label>
                <input asp-for="Invoice.Commission" class="form-control" value="@Model.Invoice.Commission" />
            </div>
            <div class="mb-3">
                <label>Net Amount</label>
                <input type="text" asp-for="Invoice.NetAmount" id="netAmountField" class="form-control" readonly value="@Model.Invoice.NetAmount.GetValueOrDefault().ToString("N2")" />
            </div>
        </div>
    </div>
    <div class="text-center">
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>
</form>

@section Scripts {
    <script>
        function calculateNetAmount() {
            const balance = parseFloat($('#balanceField').val()) || 0;
            const discountPct = parseFloat($('input[name="Invoice.Discount"]').val()) || 0;
            const taxPct = parseFloat($('input[name="Invoice.Tax"]').val()) || 0;
            const cessPct = parseFloat($('input[name="Invoice.Cess"]').val()) || 0;
            const commissionPct = parseFloat($('input[name="Invoice.Commission"]').val()) || 0;

            const discountAmt = (discountPct / 100) * balance;
            const taxAmt = (taxPct / 100) * balance;
            const cessAmt = (cessPct / 100) * balance;
            const commissionAmt = (commissionPct / 100) * balance;

            const netAmount = (balance - discountAmt) + taxAmt + cessAmt + commissionAmt;

            $('input[name="Invoice.NetAmount"]').val(netAmount.toFixed(2));
        }

        // Trigger net amount calculation on relevant input change
        $(document).on('input', 'input[name="Invoice.Discount"], input[name="Invoice.Tax"], input[name="Invoice.Cess"], input[name="Invoice.Commission"]', calculateNetAmount);

        $(document).on('click', '.workorder-option', function () {
            $('.workorder-option').removeClass('active');
            $(this).addClass('active');

            const orderId = $(this).data('id');
            const orderNo = $(this).data('no');

            $('#orderNoField').val(orderNo); 
            $('input[name="Invoice.WorkOrderId"]').val(orderId);

            fetch(`/Invoice/GetWorkOrderDetails?workOrderId=${orderId}`)
                .then(res => res.json())
                .then(data => {
                    const body = $('#workDetailsBody').empty();
                    let subTotal = 0;
                    data.forEach((d, i) => {
                        body.append(`<tr>
                            <td>${i + 1}</td>
                            <td>${d.particulars}</td>
                            <td>${d.qty}</td>
                            <td>${d.rate.toFixed(2)}</td>
                            <td>${d.gTotal.toFixed(2)}</td>
                        </tr>`);
                        subTotal += d.gTotal;
                    });
                    $('#subTotalField').val(subTotal.toFixed(2));
                });

            fetch(`/Invoice/GetFinancials?workOrderId=${orderId}`)
                .then(res => res.json())
                .then(data => {
                    $('#advanceField').val(data.advance.toFixed(2));
                    $('#balanceField').val(data.balance.toFixed(2));
                    calculateNetAmount();
                });
        });

        let latestWorkOrders = [];
        let allWorkOrders = [];

        $('#customerDropdown').on('change', function () {
            const customerId = $(this).val();
            if (!customerId) return;

            fetch(`/Invoice/GetCustomerDetails?customerId=${customerId}`)
                .then(res => res.json())
                .then(data => {
                    $('#studioField').val(data.studio);
                    $('#customerNameField').val(data.customerName);
                    $('#addressField').val(data.address);
                    $('#mobileField').val(data.mobile);
                    $('#outstandingAmount').text(data.outstanding.toFixed(2));

                    latestWorkOrders = data.latestWorkOrders;
                    allWorkOrders = data.allWorkOrders;

                    renderWorkOrders(); // initially show only latest
                });
        });

        $('#multiWorkOrderCheck').on('change', function () {
            renderWorkOrders(); // re-render based on checkbox
        });

        function renderWorkOrders() {
            const container = $('#workOrderListBox').empty();
            const toRender = $('#multiWorkOrderCheck').is(':checked') ? allWorkOrders : latestWorkOrders;

            if (toRender.length === 0) {
                container.append(`<div class='text-muted'>No WorkOrders available</div>`);
                return;
            }

            toRender.forEach(wo => {
                container.append(`<div class='workorder-option btn btn-light w-100 mb-1' data-id='${wo.workOrderId}' data-no='${wo.workOrderNo}'>${wo.workOrderNo}</div>`);
            });
        }


        $('form').on('submit', function () {
            const workOrderId = $('input[name="Invoice.WorkOrderId"]').val();
            if (!workOrderId || parseInt(workOrderId) <= 0) {
                alert('Please select a Work Order.');
                return false;
            }
        });

    </script>
} *@






@model InternalProj.ViewModel.InvoiceViewModel

@if (ViewContext.RouteData.Values["controller"]?.ToString() == "Invoice")
{
    <link rel="stylesheet" href="~/css/invoice.css" />
}

@section Styles {
    <link rel="stylesheet" href="~/css/invoice.css" asp-append-version="true" />
}

@Html.ValidationSummary(true, "", new { @class = "text-red-600 mb-6" })

@* @if (TempData["SuccessMessage"] != null)
{
    <div class="flex items-center gap-3 bg-green-100 border border-green-300 text-green-800 px-5 py-3 rounded-lg shadow mb-6" role="alert">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M9 12l2 2 4-4" />
        </svg>
        <span>@TempData["SuccessMessage"]</span>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="flex items-center gap-3 bg-red-100 border border-red-300 text-red-800 px-5 py-3 rounded-lg shadow mb-6" role="alert">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
        </svg>
        <span>@TempData["ErrorMessage"]</span>
    </div>
} *@


@if (TempData["SuccessMessage"] != null)
{
    <div id="success" class="mb-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded text-center" role="alert">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div id="error" class="mb-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded text-center" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

<script>
    setTimeout(() => {
        document.getElementById('success')?.classList.add('hidden');
        document.getElementById('error')?.classList.add('hidden');
    }, 1500);
</script>

@* <h1 class="text-center text-4xl font-extrabold tracking-tight mb-10 text-blue-900">Invoice</h1> *@
<div class="common-pages-layout">
    @* <div class="common-inner-container"> *@
    <form asp-controller="Invoice" asp-action="CreateInvoice" method="post" class="common-inner-container">
        <h3 class="page-heading">Invoice</h3>

    <div class="grid grid-cols-1 md:grid-cols-12 gap-10">
        <!-- Left panel -->
        <div class="md:col-span-8">
            <div class="grid grid-cols-1 sm:grid-cols-2 gap-8">
                <div>
                    <label class="block mb-2 text-sm font-bold text-gray-700 tracking-wide">Bill No</label>
                    <input type="text"
                           class="w-full rounded-md border border-gray-300 px-4 py-2 bg-gray-50 text-gray-500 font-semibold cursor-not-allowed"
                           value="@Model.Invoice.InvoiceId" readonly aria-readonly="true" />
                </div>

                <div>
                    <label class="block mb-2 text-sm font-bold text-gray-700 tracking-wide required-label">Bill Date</label>
                    <input type="text"
                           class="w-full rounded-md border border-gray-300 px-4 py-2 bg-gray-50 text-gray-500 font-semibold cursor-not-allowed"
                           value="@Model.Invoice.BillDate.ToString("dd-MM-yyyy")" readonly aria-readonly="true" />
                </div>

                <div>
                    <label class="block mb-2 text-sm font-bold text-gray-700 tracking-wide required-label">Customer</label>
                    <select id="customerDropdown" asp-for="Invoice.CustomerId"
                            class="w-full rounded-md border border-blue-300 px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-600"
                            aria-required="true">
                        <option value="">-- Select Customer --</option>
                        @foreach (var c in Model.Customers)
                        {
                            <option value="@c.Id">@c.StudioName</option>
                        }
                    </select>
                </div>

                <div>
                    <label class="block mb-2 text-sm font-bold text-gray-700 required-label">Studio</label>
                    <input id="studioField" type="text"
                           class="w-full rounded-md border border-gray-200 px-4 py-2 bg-gray-50 text-gray-600 cursor-not-allowed"
                           readonly aria-readonly="true" />
                </div>

                <div>
                    <label class="block mb-2 text-sm font-bold text-gray-700 required-label">Customer Name</label>
                    <input id="customerNameField" type="text"
                           class="w-full rounded-md border border-gray-200 px-4 py-2 bg-gray-50 text-gray-600 cursor-not-allowed"
                           readonly aria-readonly="true" />
                </div>

                <div>
                    <label class="block mb-2 text-sm font-bold text-gray-700 required-label">Address</label>
                    <input id="addressField" type="text"
                           class="w-full rounded-md border border-gray-200 px-4 py-2 bg-gray-50 text-gray-600 cursor-not-allowed"
                           readonly aria-readonly="true" />
                </div>

                <div>
                    <label class="block mb-2 text-sm font-bold text-gray-700">Mobile</label>
                    <input id="mobileField" type="text"
                           class="w-full rounded-md border border-gray-200 px-4 py-2 bg-gray-50 text-gray-600 cursor-not-allowed"
                           readonly aria-readonly="true" />
                </div>

                <div>
                    <label class="block mb-2 text-sm font-bold text-gray-700 required-label">Order No</label>
                    <input id="orderNoField" type="text"
                           class="w-full rounded-md border border-gray-300 px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-100"
                           placeholder="Search or select" />
                    <input type="hidden" asp-for="Invoice.WorkOrderId" />
                </div>
            </div>
        </div>

        <!-- Hidden fields -->
        <input type="hidden" asp-for="Invoice.InvoiceId" />
        <input type="hidden" asp-for="Invoice.WorkOrderId" />
        <input type="hidden" asp-for="Invoice.BillDate" />

        <!-- Right panel -->
        <div class="md:col-span-4 space-y-8">
            <div class="bg-gradient-to-r from-blue-50 to-blue-100 border-l-4 border-blue-700 text-gray-800 p-5 rounded-xl shadow-md text-lg font-semibold flex flex-col items-center">
                <span>Outstanding</span>
                <span id="outstandingAmount" class="text-2xl text-blue-800 mt-1 font-bold tracking-wide">0.00</span>
            </div>
            <div class="flex items-center gap-3">
                <input type="checkbox" id="multiWorkOrderCheck" class="form-checkbox h-5 w-5 text-blue-600 transition-all rounded" />
                <label for="multiWorkOrderCheck" class="text-gray-700 font-medium select-none">Multi WorkOrder</label>
            </div>
            <div id="workOrderListBox"
                 class="border border-gray-300 rounded-xl p-2 h-48 overflow-y-auto bg-white shadow-inner custom-scrollbar">
            </div>
        </div>
    </div>

    <hr class="border-gray-300 my-10" />

    <h5 class="text-xl md:text-2xl font-bold mb-7 tracking-tight text-blue-900 uppercase">Work Details</h5>

    <div class="overflow-x-auto rounded-lg shadow-md">
        <table class="min-w-full divide-y divide-gray-200 table-auto">
            <thead class="bg-blue-50">
                <tr>
                    <th class="px-5 py-3 text-left text-xs font-semibold text-gray-600 tracking-widest border-r border-gray-200 whitespace-nowrap">Sl.No</th>
                    <th class="px-5 py-3 text-left text-xs font-semibold text-gray-600 tracking-widest border-r border-gray-200 whitespace-nowrap">Particulars</th>
                    <th class="px-5 py-3 text-left text-xs font-semibold text-gray-600 tracking-widest border-r border-gray-200 whitespace-nowrap">Qty</th>
                    <th class="px-5 py-3 text-right text-xs font-semibold text-gray-600 tracking-widest border-r border-gray-200 whitespace-nowrap">Rate</th>
                    <th class="px-5 py-3 text-right text-xs font-semibold text-gray-600 tracking-widest whitespace-nowrap">GTotal</th>
                </tr>
            </thead>
            <tbody id="workDetailsBody" class="bg-white">
            </tbody>
        </table>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-10 mt-10">
        <div class="space-y-6">
            <div>
                <label class="block font-bold mb-2 text-gray-700">Advance</label>
                <input id="advanceField" type="text"
                       class="w-full rounded-md border border-gray-200 px-4 py-2 bg-gray-50 text-gray-700 font-semibold cursor-not-allowed"
                       readonly aria-readonly="true" />
            </div>
            <div>
                <label class="block font-bold mb-2 text-gray-700">Balance</label>
                <input id="balanceField" type="text"
                       class="w-full rounded-md border border-gray-200 px-4 py-2 bg-gray-50 text-gray-700 font-semibold cursor-not-allowed"
                       readonly aria-readonly="true" />
            </div>
            <div>
                <label class="block font-bold mb-2 text-gray-700">SubTotal</label>
                <input id="subTotalField" type="text"
                       class="w-full rounded-md border border-gray-200 px-4 py-2 bg-gray-50 text-gray-700 font-semibold cursor-not-allowed"
                       readonly aria-readonly="true" />
            </div>
            <div>
                <label class="block font-bold mb-2 text-gray-700">Discount (%)</label>
                <input asp-for="Invoice.Discount" type="number" min="0" step="0.01"
                       class="w-full rounded-md border border-gray-300 px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-200" />
            </div>
            <div>
                <label class="block font-bold mb-2 text-gray-700 required-label">Mode of Payment</label>
                <select asp-for="Invoice.ModeId"
                        class="w-full rounded-md border border-blue-300 px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-400">
                    <option value="">-- Select Payment Mode --</option>
                    @foreach (var mode in Model.PaymentModes)
                    {
                        <option value="@mode.ModeId">@mode.ModeType</option>
                    }
                </select>
            </div>
        </div>
        <div class="space-y-6">
            <div>
                <label class="block font-bold mb-2 text-gray-700">Tax (%)</label>
                <input asp-for="Invoice.Tax" type="number" min="0" step="0.01"
                       class="w-full rounded-md border border-gray-300 px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-200" />
            </div>
            <div>
                <label class="block font-bold mb-2 text-gray-700">Cess (%)</label>
                <input asp-for="Invoice.Cess" type="number" min="0" step="0.01"
                       class="w-full rounded-md border border-gray-300 px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-200" />
            </div>
            <div>
                <label class="block font-bold mb-2 text-gray-700">Commission (%)</label>
                <input asp-for="Invoice.Commission" type="number" min="0" step="0.01"
                       class="w-full rounded-md border border-gray-300 px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-200" />
            </div>
            <div>
                <label class="block font-bold mb-2 text-gray-700">Net Amount</label>
                <input asp-for="Invoice.NetAmount" id="netAmountField" type="text"
                       class="w-full rounded-md border border-gray-200 px-4 py-2 bg-gray-50 text-gray-700 font-semibold cursor-not-allowed"
                       readonly />
            </div>
        </div>
    </div>
    <div class="flex justify-center mt-16">
        <button type="submit"
                class="common-btn">
            Submit
        </button>
    </div>
</form>
</div>
</div>


@section Scripts {
    <script>
        function calculateNetAmount() {
            const balance = parseFloat($('#balanceField').val()) || 0;
            const discountPct = parseFloat($('input[name="Invoice.Discount"]').val()) || 0;
            const taxPct = parseFloat($('input[name="Invoice.Tax"]').val()) || 0;
            const cessPct = parseFloat($('input[name="Invoice.Cess"]').val()) || 0;
            const commissionPct = parseFloat($('input[name="Invoice.Commission"]').val()) || 0;

            const discountAmt = (discountPct / 100) * balance;
            const taxAmt = (taxPct / 100) * balance;
            const cessAmt = (cessPct / 100) * balance;
            const commissionAmt = (commissionPct / 100) * balance;

            const netAmount = (balance - discountAmt) + taxAmt + cessAmt + commissionAmt;

            $('input[name="Invoice.NetAmount"]').val(netAmount.toFixed(2));
        }

        $(document).on('input', 'input[name="Invoice.Discount"], input[name="Invoice.Tax"], input[name="Invoice.Cess"], input[name="Invoice.Commission"]', calculateNetAmount);

        $(document).on('click', '.workorder-option', function () {
            $('.workorder-option').removeClass('!bg-blue-900 !text-white');
            $(this).addClass('!bg-blue-900 !text-white');

            const orderId = $(this).data('id');
            const orderNo = $(this).data('no');

            $('#orderNoField').val(orderNo);
            $('input[name="Invoice.WorkOrderId"]').val(orderId);

            fetch(`/Invoice/GetWorkOrderDetails?workOrderId=${orderId}`)
                .then(res => res.json())
                .then(data => {
                    const body = $('#workDetailsBody').empty();
                    let subTotal = 0;
                    data.forEach((d, i) => {
                        body.append(`<tr>
                            <td class="px-4 py-2 border-b border-gray-200">${i + 1}</td>
                            <td class="px-4 py-2 border-b border-gray-200">${d.particulars}</td>
                            <td class="px-4 py-2 border-b border-gray-200">${d.qty}</td>
                            <td class="px-4 py-2 border-b border-gray-200 text-right">${d.rate.toFixed(2)}</td>
                            <td class="px-4 py-2 border-b border-gray-200 text-right">${d.gTotal.toFixed(2)}</td>
                        </tr>`);
                        subTotal += d.gTotal;
                    });
                    $('#subTotalField').val(subTotal.toFixed(2));
                });

            fetch(`/Invoice/GetFinancials?workOrderId=${orderId}`)
                .then(res => res.json())
                .then(data => {
                    $('#advanceField').val(data.advance.toFixed(2));
                    $('#balanceField').val(data.balance.toFixed(2));
                    calculateNetAmount();
                });
        });

        let latestWorkOrders = [];
        let allWorkOrders = [];

        $('#customerDropdown').on('change', function () {
            const customerId = $(this).val();
            if (!customerId) return;

            fetch(`/Invoice/GetCustomerDetails?customerId=${customerId}`)
                .then(res => res.json())
                .then(data => {
                    $('#studioField').val(data.studio);
                    $('#customerNameField').val(data.customerName);
                    $('#addressField').val(data.address);
                    $('#mobileField').val(data.mobile);
                    $('#outstandingAmount').text(data.outstanding.toFixed(2));

                    latestWorkOrders = data.latestWorkOrders;
                    allWorkOrders = data.allWorkOrders;

                    renderWorkOrders();
                });
        });

        $('#multiWorkOrderCheck').on('change', function () {
            renderWorkOrders();
        });

        function renderWorkOrders() {
            const container = $('#workOrderListBox').empty();
            const toRender = $('#multiWorkOrderCheck').is(':checked') ? allWorkOrders : latestWorkOrders;

            if (toRender.length === 0) {
                container.append(`<div class='text-gray-500 italic text-center pt-4'>No WorkOrders available</div>`);
                return;
            }

            toRender.forEach(wo => {
                container.append(`<div class="workorder-option cursor-pointer rounded-md border border-gray-300 px-4 py-2 mb-2 hover:bg-blue-100 transition-colors font-semibold text-blue-700" data-id='${wo.workOrderId}' data-no='${wo.workOrderNo}'>${wo.workOrderNo}</div>`);
            });
        }

        $('form').on('submit', function () {
            const workOrderId = $('input[name="Invoice.WorkOrderId"]').val();
            if (!workOrderId || parseInt(workOrderId) <= 0) {
                alert('Please select a Work Order.');
                return false;
            }
        });
    </script>
}
