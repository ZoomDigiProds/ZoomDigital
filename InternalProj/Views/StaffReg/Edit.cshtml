@model InternalProj.Models.StaffRegViewModel
@{
    ViewData["Title"] = "Edit Staff";
}

<style>

    .label {
        display: block;
        font-size: 0.875rem;
        line-height: 1.25rem;
        font-weight: 600;
        color: #374151;
        margin-bottom: 0.25rem;
    }

    /* Input Fields */
    .input-field {
        width: 100%;
        border-radius: 0.375rem;
        border: 1px solid #d1d5db;
        padding: 0.5rem 0.75rem;
        font-size: 0.875rem;
        outline: none;
    }

        .input-field:focus {
            border-color: #818cf8;
            box-shadow: 0 0 0 2px rgba(129, 140, 248, 0.5);
        }

    /* Alerts */
    .alert-danger {
        background: #f8d7da;
        color: #721c24;
        padding: 0.75rem 1rem;
        border-radius: 0.375rem;
        margin-bottom: 1rem;
    }


    /* Form container */
    .form-container {
        padding: 1rem;
        background: white;
        border-radius: 0.5rem;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    /* Grid Layout */
    .form-grid {
        display: grid;
        grid-template-columns: repeat(1, 1fr);
        gap: 1.5rem;
    }
    @@media (min-width: 768px) {
        .form-grid

    {
        grid-template-columns: repeat(4, 1fr);
    }

    }

    /* Error messages */
    .error-message {
        color: red;
        font-size: 0.8rem;
        margin-top: 0.25rem;
    }

    /* Multi-select dropdown */
    .multi-checkbox-dropdown {
        position: relative;
    }

        .multi-checkbox-dropdown .selected-items {
            border: 1px solid #d1d5db;
            border-radius: 0.375rem;
            padding: 0.5rem 0.75rem;
            background: white;
            cursor: pointer;
            font-size: 0.875rem;
        }

        .multi-checkbox-dropdown .checkbox-list {
            position: absolute;
            top: 100%;
            left: 0;
            width: 100%;
            max-height: 160px;
            overflow-y: auto;
            z-index: 50;
            border: 1px solid #d1d5db;
            background: white;
            border-radius: 0.375rem;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
            margin-top: 0.125rem;
            padding: 0.5rem;
        }

        .multi-checkbox-dropdown label {
            display: block;
            font-size: 0.85rem;
            padding: 0.25rem 0;
        }

    /* Buttons */
    .form-actions {
        display: flex;
        justify-content: center;
        gap: 1rem;
        margin-top: 2rem;
    }
</style>

<div class="common-pages-layout">
    <div class="common-inner-container">
        <h3 class="page-heading">Edit Staff Details</h3>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert-success" id="success">@TempData["SuccessMessage"]</div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert-error" id="error">@TempData["ErrorMessage"]</div>
        }
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert-danger">
                <ul>
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <li>@error.ErrorMessage</li>
                    }
                </ul>
            </div>
        }

        <form asp-action="Edit" method="post" id="editForm" class="form-container" novalidate>
            @Html.AntiForgeryToken()
            <input type="hidden" name="StaffRegId" value="@Model.StaffRegId" />

            <div class="form-grid">
                <!-- Basic Info -->
                <div>
                    <label for="UserName" class="label required-label">Username</label>
                    <input id="UserName" name="UserName" type="text" value="@Model.UserName" class="input-field" readonly />
                </div>
                <div>
                    <label for="FirstName" class="label required-label">First Name</label>
                    <input id="FirstName" name="FirstName" type="text" value="@Model.FirstName" class="input-field" required />
                </div>
                <div>
                    <label for="LastName" class="label required-label">Last Name</label>
                    <input id="LastName" name="LastName" type="text" value="@Model.LastName" class="input-field" required />
                </div>
                <div>
                    <label for="Address1" class="label required-label">Address 1</label>
                    <input id="Address1" name="Address1" type="text" value="@Model.Address1" class="input-field" required />
                </div>

                <!-- Address & Dates -->
                <div>
                    <label for="Address2" class="label">Address 2</label>
                    <input id="Address2" name="Address2" type="text" value="@Model.Address2" class="input-field" />
                </div>
                <div>
                    <label for="DOB" class="label required-label">DOB</label>
                    <input id="DOB" name="DOB" type="date" value="@Model.DOB?.ToString("yyyy-MM-dd")" class="input-field" required />
                </div>
                <div>
                    <label for="DOJ" class="label required-label">DOJ</label>
                    <input id="DOJ" name="DOJ" type="date" value="@Model.DOJ?.ToString("yyyy-MM-dd")" class="input-field" required />
                </div>

                <!-- Contact -->
                <div>
                    <label for="Phone1" class="label required-label">Phone 1</label>
                    <input id="Phone1" name="Phone1" type="text" value="@Model.Phone1" class="input-field" required />
                </div>
                <div>
                    <label for="Phone2" class="label">Phone 2</label>
                    <input id="Phone2" name="Phone2" type="text" value="@Model.Phone2" class="input-field" />
                </div>
                <div>
                    <label for="Whatsapp" class="label">WhatsApp</label>
                    <input id="Whatsapp" name="Whatsapp" type="text" value="@Model.Whatsapp" class="input-field" />
                </div>
                <div>
                    <label for="Email" class="label required-label">Email</label>
                    <input id="Email" name="Email" type="email" value="@Model.Email" class="input-field" required />
                    @Html.ValidationMessage("Email", "", new { @class = "error-message" })
                </div>

                <!-- Dropdowns -->
                <div>
                    <label for="PhoneTypeId" class="label required-label">Phone Type</label>
                    <select id="PhoneTypeId" name="PhoneTypeId" class="input-field" required>
                        <option value="">-- Select --</option>
                        @foreach (var type in Model.PhoneTypes)
                        {
                            <option value="@type.PhoneTypeId" selected="@(Model.PhoneTypeId == type.PhoneTypeId)">
                                @type.PhoneTypeName
                            </option>
                        }
                    </select>
                </div>
                <div>
                    <label for="BranchId" class="label required-label">Branch</label>
                    <select id="BranchId" name="BranchId" class="input-field" required>
                        <option value="">-- Select --</option>
                        @foreach (var branch in Model.Branches)
                        {
                            <option value="@branch.BranchId" selected="@(Model.BranchId == branch.BranchId)">
                                @branch.BranchName
                            </option>
                        }
                    </select>
                </div>

                <!-- Multi-select -->
                <div>
                    <label class="label required-label">Designation</label>
                    <div id="designationDropdown" class="multi-checkbox-dropdown">
                        <div tabindex="0" class="selected-items">Select Designation(s)</div>
                        <div class="checkbox-list hidden">
                            @foreach (var desig in Model.Designations)
                            {
                                var isChecked = Model.SelectedDesignationIds?.Contains(desig.DesignationId) ?? false;
                                <label>
                                    <input type="checkbox" name="SelectedDesignationIds" value="@desig.DesignationId"
                                           @(isChecked ? "checked" : "") />
                                    @desig.Name
                                </label>
                            }
                        </div>
                    </div>
                </div>

                <input type="hidden" name="Active" value="Y" />
                <div>
                    <label class="label required-label">Department</label>
                    <div id="departmentDropdown" class="multi-checkbox-dropdown">
                        <div tabindex="0" class="selected-items">Select Department(s)</div>
                        <div class="checkbox-list hidden">
                            @foreach (var dept in Model.Departments)
                            {
                                var isChecked = Model.SelectedDeptIds?.Contains(dept.DeptId) ?? false;
                                <label>
                                    <input type="checkbox" name="SelectedDeptIds" value="@dept.DeptId"
                                           @(isChecked ? "checked" : "") />
                                    @dept.Name
                                </label>
                            }
                        </div>
                    </div>
                </div>
                </div>


                <div>
            <!-- Actions -->
            <div class="flex justify-center mt-8 gap-1">
                <button type="submit" class="common-btn px-3">Update</button>
                <a asp-action="Index" class="common-btn px-4">Back</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        setTimeout(() => { document.getElementById('success')?.classList.add('hidden'); }, 1500);
        setTimeout(() => { document.getElementById('error')?.classList.add('hidden'); }, 1500);

        function setupMultiCheckboxDropdown(id) {
            const dropdown = document.getElementById(id);
            const display = dropdown.querySelector('.selected-items');
            const checkboxList = dropdown.querySelector('.checkbox-list');
            const checkboxes = checkboxList.querySelectorAll('input[type=checkbox]');

            display.addEventListener('click', () => {
                checkboxList.classList.toggle('hidden');
            });
            display.addEventListener('keydown', e => {
                if (e.key === 'Enter' || e.key === ' ') {
                    e.preventDefault();
                    checkboxList.classList.toggle('hidden');
                }
            });
            document.addEventListener('click', e => {
                if (!dropdown.contains(e.target)) {
                    checkboxList.classList.add('hidden');
                }
            });

            function updateText() {
                const selected = Array.from(checkboxes)
                    .filter(cb => cb.checked)
                    .map(cb => cb.parentElement.textContent.trim());
                display.textContent = selected.length ? selected.join(', ') : 'Select';
            }
            checkboxes.forEach(cb => cb.addEventListener('change', updateText));
            updateText();
        }
        setupMultiCheckboxDropdown('designationDropdown');
        setupMultiCheckboxDropdown('departmentDropdown');
    </script>
}
