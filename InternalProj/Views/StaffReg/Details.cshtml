@model InternalProj.Models.StaffRegViewModel

@{
    ViewData["Title"] = "Staff Details";
}

<!-- Tailwind CSS CDN (if not already globally loaded) -->
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet" />

@if (TempData["SuccessMessage"] != null)
{
    <div class="bg-green-100 text-green-800 rounded p-3 text-center font-medium mb-4" id="success">
        @TempData["SuccessMessage"]
    </div>
}

<script>
    setTimeout(() => {
        document.getElementById('success')?.classList.add('hidden');
    }, 5000);
</script>

<h3 class="text-center text-2xl font-extrabold mt-8 mb-8 text-gray-900">@Model.UserName</h3>

<div class="min-h-screen bg-gradient-to-br from-gray-100 to-purple-100 py-10 px-2 flex items-start justify-center">

    <!-- Main Wrapper -->
    <div class="w-full max-w-5xl flex flex-col lg:flex-row gap-8">

        <!-- Profile Card -->
        <div class="flex-shrink-0 w-full lg:max-w-xs bg-white rounded-2xl shadow-xl p-8 flex flex-col items-center">
            <div class="mb-4">
                <span class="inline-block bg-purple-100 text-purple-700 rounded-full p-5 text-4xl">
                    <svg xmlns="http://www.w3.org/2000/svg" class="w-10 h-10" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5.121 17.804A9 9 0 0112 3a9 9 0 016.879 14.804A4.992 4.992 0 0012 21a4.992 4.992 0 00-6.879-3.196z" /></svg>
                </span>
            </div>
            <div class="text-xl font-bold text-gray-900 mb-1">
                @Model.FirstName @Model.LastName
            </div>
            <div class="text-sm text-gray-500 mb-3">@Model.UserName</div>
            @if (Model.BranchId != null && Model.Branches?.FirstOrDefault(b => b.BranchId == Model.BranchId) != null)
            {
                <div class="text-sm bg-purple-50 text-purple-700 rounded-full px-3 py-1 font-medium mb-1">@Model.Branches.FirstOrDefault(b => b.BranchId == Model.BranchId)?.BranchName</div>
            }
            <div>
            @if (Model.SelectedDeptIds?.Any() == true)
            {
                <div class="flex flex-wrap gap-2 justify-center mt-2">
                    @foreach (var deptId in Model.SelectedDeptIds)
                    {
                        var dept = Model.Departments.FirstOrDefault(d => d.DeptId == deptId);
                        if (dept != null)
                        {
                            <span class="inline-block px-3 py-1 rounded-full bg-green-100 text-sky-700 text-xs font-semibold">@dept.Name</span>
                        }
                    }
                </div>
            }
            </div>
            <br/>
            <div>
                @if (Model.SelectedDesignationIds?.Any() == true)
                {
                    <div class="flex flex-wrap gap-2 justify-center mt-3">
                        @foreach (var desigId in Model.SelectedDesignationIds)
                        {
                            var desig = Model.Designations.FirstOrDefault(d => d.DesignationId == desigId);
                            if (desig != null)
                            {
                                <span class="inline-block px-3 py-1 rounded-full bg-pink-100 text-pink-700 text-xs font-semibold">@desig.Name</span>
                            }
                        }
                    </div>
                }
            </div>
        </div>

        <!-- Details Section -->
        <div class="flex-1 bg-white rounded-2xl shadow-xl p-8">
            <div class="text-2xl font-bold text-purple-900 mb-8 text-center lg:text-left">Staff Details</div>
            <dl class="space-y-5">

                @if (Model.DOB != null)
                {
                    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between border-b pb-3">
                        <dt class="text-gray-500 font-semibold">Date of Birth</dt>
                        <dd class="text-gray-900 font-medium text-sm">@Model.DOB?.ToString("yyyy-MM-dd")</dd>
                    </div>
                }
                @if (Model.DOJ != null)
                {
                    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between border-b pb-3">
                        <dt class="text-gray-500 font-semibold">Date of Joining</dt>
                        <dd class="text-gray-900 font-medium text-sm">@Model.DOJ?.ToString("yyyy-MM-dd")</dd>
                    </div>
                }
                @if (!string.IsNullOrWhiteSpace(Model.Address1))
                {
                    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between border-b pb-3">
                        <dt class="text-gray-500 font-semibold">Address 1</dt>
                        <dd class="text-gray-900 font-medium text-sm">@Model.Address1</dd>
                    </div>
                }
                @if (!string.IsNullOrWhiteSpace(Model.Address2))
                {
                    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between border-b pb-3">
                        <dt class="text-gray-500 font-semibold">Address 2</dt>
                        <dd class="text-gray-900 font-medium text-sm">@Model.Address2</dd>
                    </div>
                }
                @if (!string.IsNullOrWhiteSpace(Model.Phone1))
                {
                    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between border-b pb-3">
                        <dt class="text-gray-500 font-semibold">Phone 1</dt>
                        <dd class="text-gray-900 font-medium text-sm">@Model.Phone1</dd>
                    </div>
                }
                @if (!string.IsNullOrWhiteSpace(Model.Phone2))
                {
                    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between border-b pb-3">
                        <dt class="text-gray-500 font-semibold">Phone 2</dt>
                        <dd class="text-gray-900 font-medium text-sm">@Model.Phone2</dd>
                    </div>
                }
                @* @if (Model.SelectedDesignationIds?.Any() == true)
                {
                    <div class="bg-gray-50 border border-gray-200 rounded-lg p-4 hover:bg-indigo-50 transition">
                        <div class="text-xs font-semibold text-gray-600 mb-1">Designations</div>
                        <div class="flex flex-wrap gap-2 mt-2">
                            @foreach (var desigId in Model.SelectedDesignationIds)
                            {
                                var desig = Model.Designations.FirstOrDefault(d => d.DesignationId == desigId);
                                if (desig != null)
                                {
                                    <span class="inline-block px-3 py-1 rounded-full bg-pink-100 text-pink-700 text-xs font-semibold">@desig.Name</span>
                                }
                            }
                        </div>
                    </div>
                } *@
                @if (!string.IsNullOrWhiteSpace(Model.Whatsapp))
                {
                    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between border-b pb-3">
                        <dt class="text-gray-500 font-semibold">WhatsApp</dt>
                        <dd class="text-gray-900 font-medium text-sm">@Model.Whatsapp</dd>
                    </div>
                }
                @if (!string.IsNullOrWhiteSpace(Model.Email))
                {
                    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between border-b pb-3">
                        <dt class="text-gray-500 font-semibold">Email</dt>
                        <dd class="text-gray-900 font-medium text-sm">@Model.Email</dd>
                    </div>
                }
                @if (Model.PhoneTypeId != null && Model.PhoneTypes?.FirstOrDefault(p => p.PhoneTypeId == Model.PhoneTypeId) != null)
                {
                    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between border-b pb-3">
                        <dt class="text-gray-500 font-semibold">Phone Type</dt>
                        <dd class="text-gray-900 font-medium text-sm">@Model.PhoneTypes.FirstOrDefault(p => p.PhoneTypeId == Model.PhoneTypeId)?.PhoneTypeName</dd>
                    </div>
                }
            </dl>

            <div class="flex flex-wrap justify-center gap-6 mt-10">
                <a asp-action="Edit" asp-route-id="@Model.StaffRegId" class="inline-block min-w-[120px] px-5 py-2 rounded-full bg-indigo-600 text-white font-semibold shadow hover:bg-indigo-700 text-center transition">Edit</a>
                <a asp-action="Index" class="inline-block min-w-[120px] px-5 py-2 rounded-full bg-white text-gray-700 border border-gray-400 font-semibold shadow hover:bg-gray-100 text-center transition">Back</a>
            </div>
        </div>
    </div>
</div>
